const createAuthorNode = (author, index) => {
  try {
    const size = Math.max(0.5, Math.log(author.total_poems + 1) * 1.5);
    const geometry = new THREE.SphereGeometry(size, 32, 32);
    const material = new THREE.MeshBasicMaterial({
      color: getColorByIndex(index),
      transparent: true,
      opacity: 0.8
    });
    const node = new THREE.Mesh(geometry, material);

    node.position.set(
      THREE.MathUtils.randFloatSpread(50),
      THREE.MathUtils.randFloatSpread(50),
      THREE.MathUtils.randFloatSpread(50)
    );

    node.userData = { author, index };
    scene.add(node);
    authorNodes.push(node);

    // 检查是否有图片URL
    if (author.imgUrl) {
      // 创建图片材质
      const texture = new THREE.TextureLoader().load(author.imgUrl);
      const spriteMaterial = new THREE.SpriteMaterial({ map: texture });
      const sprite = new THREE.Sprite(spriteMaterial);
      sprite.scale.set(10, 10, 1); // 设置图片大小为30x30像素
      sprite.position.copy(node.position);
      scene.add(sprite);
      textLabels.push(sprite);
    }
  } catch (error) {
    updateDebugInfo(`创建作者节点 ${author.name} 失败: ${error.message}`);
  }
};













const createAuthorNode = (author, index) => {
  try {
    const size = Math.max(0.5, Math.log(author.total_poems + 1) * 1.5);

    // 调试信息
    console.log(`创建节点: ${author.name}, 图片URL: ${author.imgUrl || '无'}`);

    if (author.imgUrl) {
      const img = new Image();
      img.crossOrigin = "Anonymous";
      img.src = author.imgUrl;

      img.onload = function() {
        console.log('图片加载成功，创建纹理:', author.imgUrl);

        const canvas = document.createElement('canvas');
        const ctx = canvas.getContext('2d');
        const diameter = 128;
        canvas.width = diameter;
        canvas.height = diameter;

        ctx.beginPath();
        ctx.arc(diameter/2, diameter/2, diameter/2, 0, Math.PI * 2);
        ctx.closePath();
        ctx.clip();
        ctx.drawImage(img, 0, 0, diameter, diameter);

        const texture = new THREE.CanvasTexture(canvas);
        const spriteMaterial = new THREE.SpriteMaterial({
          map: texture,
          transparent: true,
          opacity: 0.9
        });

        const sprite = new THREE.Sprite(spriteMaterial);
        sprite.scale.set(size * 2, size * 2, 1);
        sprite.position.set(
          THREE.MathUtils.randFloatSpread(50),
          THREE.MathUtils.randFloatSpread(50),
          THREE.MathUtils.randFloatSpread(50)
        );
        
        // 添加自定义属性以便识别
        sprite.userData = {
          type: 'author',
          author: author,
          index: index
        };
        
        scene.add(sprite);
        textLabels.push(sprite);
        console.log('精灵创建完成');
      };

      img.onerror = function() {
        console.error('图片加载失败:', author.imgUrl);
      };
    }
  } catch (error) {
    console.error(`创建作者节点 ${author.name} 失败:`, error);
  }
};